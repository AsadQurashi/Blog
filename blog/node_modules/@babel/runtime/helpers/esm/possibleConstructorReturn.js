import _typeof from "./typeof.js";
import assertThisInitialized from "./assertThisInitialized.js";
<<<<<<< HEAD
function _possibleConstructorReturn(t, e) {
  if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return assertThisInitialized(t);
}
export { _possibleConstructorReturn as default };
=======
export default function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
>>>>>>> b047c7af968c2defde288ca932b322a98c4a7fc4
