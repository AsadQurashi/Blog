/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<<<<<<< HEAD
let firstHiddenTime = document.visibilityState === 'hidden' ? 0 : Infinity;
=======
let firstHiddenTime =
    document.visibilityState === 'hidden' ? 0 : Infinity;
>>>>>>> b047c7af968c2defde288ca932b322a98c4a7fc4

const onVisibilityChange = (event: Event) => {
  if (document.visibilityState === 'hidden') {
    firstHiddenTime = event.timeStamp;
    removeEventListener('visibilitychange', onVisibilityChange, true);
  }
<<<<<<< HEAD
};
=======
}
>>>>>>> b047c7af968c2defde288ca932b322a98c4a7fc4

// Note: do not add event listeners unconditionally (outside of polyfills).
addEventListener('visibilitychange', onVisibilityChange, true);

export const getFirstHiddenTime = () => firstHiddenTime;
